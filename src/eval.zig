// zig fmt: off
const p_mg = [_]i16{
      0,   0,   0,   0,   0,   0,   0,   0,
     40,  74,  60,  56,  70,  95, 118,  66,
     42,  64,  71,  65,  81,  63, 104,  65,
     37,  67,  64,  83,  81,  73,  77,  37,
     53,  70,  68,  77,  89,  76,  77,  48,
     45,  63,  83,  78,  91, 127,  70,  54,
    108, 115,  87, 106, 122, 139,  92,  48,
      0,   0,   0,   0,   0,   0,   0,   0,
};
const p_eg = [_]i16{
      0,   0,   0,   0,   0,   0,   0,   0,
     95,  88,  88,  88,  81,  79,  73,  72,
     85,  83,  69,  80,  74,  75,  73,  72,
     92,  84,  72,  69,  68,  68,  75,  78,
    109, 101,  90,  81,  72,  80,  89,  93,
    165, 163, 152, 137, 124, 116, 143, 146,
    216, 213, 210, 182, 176, 174, 205, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
};
const n_mg = [_]i16{
    293, 329, 303, 326, 321, 333, 325, 278,
    326, 320, 345, 348, 349, 360, 345, 342,
    329, 342, 362, 360, 365, 357, 365, 328,
    337, 343, 360, 357, 367, 370, 355, 328,
    351, 362, 359, 392, 366, 385, 350, 368,
    334, 363, 366, 397, 424, 456, 404, 352,
    283, 312, 411, 367, 415, 405, 342, 335,
    136, 262, 295, 296, 356, 237, 213, 215,
};
const n_eg = [_]i16{
    148, 157, 175, 180, 174, 180, 156, 158,
    166, 177, 178, 188, 187, 182, 168, 163,
    171, 189, 183, 201, 202, 190, 178, 163,
    178, 187, 204, 209, 209, 194, 182, 181,
    177, 194, 203, 206, 205, 201, 198, 173,
    162, 178, 199, 194, 172, 173, 166, 166,
    162, 175, 167, 182, 163, 159, 166, 151,
    179, 156, 169, 176, 157, 167, 172, 134,
};
const b_mg = [_]i16 {
    379, 361, 375, 364, 358, 360, 367, 368,
    365, 401, 385, 381, 382, 401, 409, 382,
    395, 394, 393, 386, 393, 393, 387, 394,
    363, 383, 385, 404, 406, 389, 385, 360,
    355, 375, 394, 399, 401, 385, 386, 372,
    367, 379, 417, 391, 427, 422, 416, 406,
    358, 382, 368, 367, 391, 420, 376, 399,
    337, 308, 340, 304, 264, 329, 340, 291,
};
const b_eg = [_]i16 {
    177, 190, 178, 200, 197, 191, 178, 181,
    193, 188, 194, 205, 208, 197, 191, 185,
    187, 198, 210, 213, 214, 206, 190, 185,
    199, 205, 213, 205, 206, 213, 197, 192,
    210, 212, 208, 213, 211, 205, 201, 195,
    204, 205, 202, 213, 197, 205, 195, 190,
    186, 202, 202, 196, 198, 187, 197, 170,
    194, 192, 190, 207, 208, 197, 187, 205,
};
const r_mg = [_]i16 {
    461, 465, 478, 482, 486, 473, 458, 471,
    439, 461, 459, 463, 468, 474, 496, 441,
    444, 456, 469, 481, 481, 467, 500, 477,
    445, 448, 452, 469, 474, 471, 482, 473,
    448, 466, 489, 502, 488, 488, 515, 504,
    475, 481, 487, 504, 524, 529, 556, 526,
    480, 475, 509, 524, 513, 553, 557, 540,
    516, 515, 519, 584, 591, 572, 534, 514,
};
const r_eg = [_]i16 {
    378, 384, 384, 392, 378, 376, 378, 351,
    382, 377, 385, 384, 380, 378, 367, 378,
    376, 380, 379, 374, 375, 375, 359, 366,
    384, 386, 389, 387, 382, 379, 371, 367,
    389, 386, 381, 377, 378, 381, 369, 368,
    385, 386, 384, 380, 370, 370, 365, 366,
    387, 396, 385, 379, 375, 367, 364, 362,
    388, 385, 387, 365, 360, 363, 373, 373,
};
const q_mg = [_]i16 {
    948, 932, 941, 957, 936,  921,  909,  944,
    930, 950, 952, 951, 955,  969,  973,  963,
    933, 951, 945, 947, 944,  952,  954,  947,
    932, 939, 936, 941, 947,  948,  955,  943,
    925, 932, 937, 939, 945,  947,  939,  965,
    929, 931, 950, 969, 985, 1012, 1051, 1007,
    931, 921, 922, 897, 903, 1033,  961, 1047,
    854, 866, 889, 912, 979, 1000,  906,  867,
};
const q_eg = [_]i16 {
    685, 690, 684, 656, 701, 693, 684, 654,
    702, 703, 691, 707, 699, 662, 662, 667,
    682, 676, 717, 712, 727, 711, 709, 688,
    702, 707, 721, 743, 736, 721, 715, 699,
    695, 719, 716, 739, 755, 760, 736, 711,
    684, 709, 724, 715, 746, 712, 669, 677,
    706, 708, 731, 764, 771, 729, 738, 636,
    727, 752, 745, 754, 709, 689, 707, 753,
};
const k_mg = [_]i16 {
    -37,  22,   1, -55,  -2, -34,  34,  28,
     28,  -9, -21, -69, -56, -29,  20,  21,
     17,  18, -54, -65, -64, -45, -10, -23,
     29,  28,  22, -37, -34, -58, -34, -61,
     -9,  17,  33, -22, -20,  -4,   3, -44,
     34, 136,  38,  69,   3,  66,  83,  11,
     61, 123, 106,  50,  68, 113,  18, -19,
    126,  67, 121,  80,  50,  95,  56,  34,
};
const k_eg = [_]i16 {
     -7, -16,  -5,   4, -15,   2, -22, -41,
    -18,   5,  16,  30,  29,  25,   7,  -8,
    -26,   2,  24,  32,  34,  31,  16,   6,
    -22,  -3,  13,  26,  29,  32,  21,  12,
    -12,   5,  12,  21,  20,  25,  22,  14,
    -11,  -2,  14,   4,  16,  18,  25,  16,
    -17,  -5,  -5,  -1,   3,  10,  28,  20,
    -51, -20, -18, -17, -10,  -1,   0, -15,
};
// zig fmt: on

pub fn eval(game: *const Game) i32 {
    const mg_phase = phase(&game.board);
    const eg_phase = 24 - mg_phase;
    var score: i32 = 0;
    for (0..16) |id| {
        const where = coord.compress(game.board.where[id]);
        score += switch (game.board.pieces[id]) {
            .none => 0,
            .k => k_mg[where] * mg_phase + k_eg[where] * eg_phase,
            .q => q_mg[where] * mg_phase + q_eg[where] * eg_phase,
            .r => r_mg[where] * mg_phase + r_eg[where] * eg_phase,
            .b => b_mg[where] * mg_phase + b_eg[where] * eg_phase,
            .n => n_mg[where] * mg_phase + n_eg[where] * eg_phase,
            .p => p_mg[where] * mg_phase + p_eg[where] * eg_phase,
        };
    }
    for (16..32) |id| {
        const where = coord.compress(game.board.where[id] ^ 0x70);
        score -= switch (game.board.pieces[id]) {
            .none => 0,
            .k => k_mg[where] * mg_phase + k_eg[where] * eg_phase,
            .q => q_mg[where] * mg_phase + q_eg[where] * eg_phase,
            .r => r_mg[where] * mg_phase + r_eg[where] * eg_phase,
            .b => b_mg[where] * mg_phase + b_eg[where] * eg_phase,
            .n => n_mg[where] * mg_phase + n_eg[where] * eg_phase,
            .p => p_mg[where] * mg_phase + p_eg[where] * eg_phase,
        };
    }
    score = @divTrunc(score, 24);
    return switch (game.board.active_color) {
        .white => score,
        .black => -score,
    };
}

pub fn phase(board: *const Board) i32 {
    var result: i32 = 0;
    for (board.pieces) |ptype| {
        result += switch (ptype) {
            .none, .k, .p => 0,
            .q => 4,
            .r => 2,
            .b => 1,
            .n => 1,
        };
    }
    return @min(result, 24);
}

const Board = @import("Board.zig");
const Game = @import("Game.zig");
const coord = @import("coord.zig");
